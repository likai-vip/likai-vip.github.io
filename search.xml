<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>内卷化社会</title>
    <url>/2020/02/11/%E5%86%85%E5%8D%B7%E5%8C%96%E7%A4%BE%E4%BC%9A/</url>
    <content><![CDATA[<p>作者：袁郊马<br>链接：<a href="https://www.zhihu.com/question/20227099/answer/19549951" target="_blank" rel="noopener">https://www.zhihu.com/question/20227099/answer/19549951</a></p>
<p>在解释中国农村问题的诸多理论中，“内卷化”理论是近年来备受关注的一种范式。克利福德·吉尔茨（Clifford Geertz）1936年的著作《农业过密化：印度尼西亚的生态变化过程》（Agricultural Involution: The Process of Ecological Change in Indonesia）<br>中，最早明确使用了“内卷化”概念，吉尔茨考察了印尼的水稻经济，指出农民在人口压力下不断增加水稻种植过程中的劳动投入，从获得较高的产量。然而，劳动的超密集投入并未带来产出的成比例增长，出现了单位劳动边际报酬的递减，即“内卷化”现象。更抽象的说，“内卷化”是指“一种社会或文化模式在某一发展阶段达到一种确定的形式后，便停滞不前或无法转化为另一种高级模式的现象。” [1]  </p>
<p>加州大学洛杉矶分校的黄宗智是第一个把内卷化概念运用在中国问题研究的学者，他的两部研究中国农业问题的杰作——《华北的小农经济与社会变迁》(斯坦福大学出版社1985年出版，中华书局于1986年出版中译本)和《长江三角洲的小农家庭与乡村发展》(斯坦福大学出版社1990年出版，中华书局于1992年出版中译本)将内卷化概念加以扩展和延伸（在《华北》一书中，他将involution翻译为内卷化，而在《长江三角洲》一书中翻译为过密化，两个译名在内涵上并无本质区别）。除了论述中国的贫农在人口压力下，通过生产的集约化，投身单位劳动边际报酬的递减的糊口经济外，他比吉尔茨更进一步，论述了在这样的情况下农民可能通过选择高商品化的农产品，投入大量的劳动力，以牺牲单位劳动日生产效率的代价，以换取提高的年产，或者说获得的是急剧下降的边际报酬。[2]这也为中国经济在近代出现了较高的商品率这一现象提出了新解释——传统观念往往纠结于讨论这是否说明中国近代出现了资本主义萌芽，而黄宗智指出不能把商品经济简单地等同于向资本主义过度。[3]他以内卷化理论论证这并不代表生产关系的进步，而是一种没有发展的增长，相反，它还抑制了资本主义的产生和发展，不会带来社会生产力的解放和发展。   </p>
<p>黄宗智的创造性观点很快引发学者们的关注与热烈讨论。首先在国外，马若孟（Myers Ramon）认为中国近代农业增长的速度超过了人口增长的速度，王国斌认为很难区分人口压力推动的商品化和资本主义逻辑的商品化之间的区别。由于该问题的核心关怀在于中国，所以它在中国的讨论更为激烈。陈意新、戴一峰、杨念群、侯且岸等人从结论和方法等方面给予了赞扬[4]，但也有大量的质疑，主要体现在对劳动生产率作为衡量发展标准的合理性（如董恺忱、林刚等[5]），经济作物是否导致劳动日生产率的下降（如侯杨方对湖州桑蚕业的研究[6]和王建革对棉花种植的研究[7]），商品化和资本主义萌芽这一概念的关系等等诸多问题上。  </p>
<p>内卷化的理论很快被学者应用在中国问题的其他方面。印度裔美国学者杜赞奇在《文化、权力与国家：1900——1942年的华北农村》一书中提出了“国家政权的内卷化”，第一次把内卷化这一概念延伸到社会政治领域。他和黄宗智同样运用满铁在中国华北的“惯行调查记录”，研究二十世纪中前期华北农村的社会生活。与黄宗智着眼于生产关系与生产力的经济视角不同，他关注的是当时国家政权竭尽全力企图加深和加强对乡村社会控制的过程——也就是所谓的“（现代）国家政权建设”。他认为当时中国华北乡村的权力关系可以用“权利的文化网络”（culture nexus of power）这一概念来解释：它“包括不断相互交错影响作用的等级组织和非正式相互关系网。”[8]他引入“保护型经纪”和“营利型经纪”两种概念，试图证明20世纪前期的中国国家政权离开或破坏文化网络以控制乡村社会的企图是注定要失败的。这一失败的原因可以称为“国家政权的内卷化”——“国家机构不是靠提高旧有或新增机构的效益，而是靠复制或扩大旧有的国家与社会关系——如中国旧有的营利型经纪体制——来扩大其行政职能。”他认为，“国家政权的扩张应该建立在提高效益的基础上”，“国家政权内卷化在财政方面的最充分表现是，国家财政每增加一分，都伴随着非正式机构收入的增加，而国家对这些机构缺乏控制力。换句话说，内卷化的国家政权无能力建立有效的官僚机构从而取缔非正式机构的贪污中饱——后者正式国家政权对乡村社会增加榨取的必然结果。” [9]  </p>
<p>黄宗智和杜赞奇两人以新颖的角度，对近代华北农村的政治与经济做了开拓性的探讨。那么，在中国共产党获取政权后，这个以农村包围城市的策略最后取得革命胜利的政党是如何治理华北农村的？要回答这个问题，就不能不重视对人民公社的研究。在黄宗智和杜赞奇二人的理论下，不由得让人追问，1949年后的华北农村是否还是处于经济上和政治上的内卷化。  </p>
<p>黄宗智基于长江三角洲的研究，得出了“集体生产制度不仅没有消除过密化的倾向，反而进一步加强了这一倾向”的结论。“到70年代末，农村劳动力的报酬仍只够维持生存，与解放前数百年一样。”[10]杜赞奇从他的领域则得出“共产党政权的建立标志着国家政权‘内卷化’扩张的终结”的结论。他认为“新中国初期大批裁减赢利型国家经纪是税收大幅度增加的一个重要原因……共产党之所以能够如此，是因为它从基层开始建立了与国家政权相联结的各级组织。从另一角度来看，新中国初期完成了民国政权所未完成的‘国家政权建设’任务，它根治了自明朝以来历届政府无法解决的难题——偷税漏税，这即是一个明证。”[11]但由于均没有掌握足够的解放后的华北地区农村的资料，他们并没有进一步对该地区的农业内卷化和国家政权内卷化进行细致的研究。   </p>
<p>至于农业内卷化和国家政权内卷化二者之间的联系，两人都没有进行过探讨，只有黄宗智简单地提到“农村生产的过密化对政权组织来讲是有利的。……从国家政权的角度来看，过密化的增长越大，无论边际劳动力的报酬如何，税收与征购就会越多。最后，国家政权出于理论原因，藐视农村小买卖和小农家庭的‘小商品生产’。”[12]<br>[1] 杜赞奇.文化、权力与国家：1900——1942年的华北农村.江苏人民出版社.2010.p53-54<br>[2] 黄宗智.华北的小农经济与社会变迁.中华书局.2000.p172<br>[3] 黄宗智.华北的小农经济与社会变迁.中华书局.2000.p307<br>[4] 参见：陈意新.美国学者对中国近代农业经济的研究.中国经济史研究.2001(7)戴一峰.环境与发展：二十世纪上半期闽西农村的社会经济.中国社会经济史研究.2004（4）杨念群.中层理论——东西方思想会通下的中国史研究.江西教育出版社.2001侯且岸.资本主义萌芽？过密化？商品化？.史学理论研究.1994（2）<br>[5] 参见：无为.传统农业与小农经济学术讨论会纪要.中国史研究动态.1993（8）<br>林刚.中国国情与早期现代化.中国经济史研究.1999（4）<br>[6] 侯杨方.“过密化”论与小农经济决策行为分析——以湖北小农家庭缫丝业为个案.学术月刊.1994（7）<br>[7] 王建革.近代华北的农业生态与社会变迁——兼论黄宗智“过密化”理论的不成立.中国农史.1999（1）<br>[8] 杜赞奇.文化、权力与国家：1900——1942年的华北农村.江苏人民出版社.2010.p5<br>[9] 杜赞奇.文化、权力与国家：1900——1942年的华北农村.江苏人民出版社.2010.p54-55<br>[10] 黄宗智.长江三角洲小农家庭与乡村发展.中华书局.2000.p317<br>[11] 杜赞奇.现代化的陷阱——1900-1942年中国国家政权的扩张对华北乡村社会的影响.战略与管理.1994(4)<br>[12] 黄宗智.长江三角洲小农家庭与乡村发展.中华书局.2000.p317</p>
]]></content>
      <categories>
        <category>感悟</category>
      </categories>
      <tags>
        <tag>内卷</tag>
      </tags>
  </entry>
  <entry>
    <title>识别行业周期</title>
    <url>/2020/02/10/%E8%AF%86%E5%88%AB%E8%A1%8C%E4%B8%9A%E5%91%A8%E6%9C%9F/</url>
    <content><![CDATA[<p>作者：霍华德<br>链接：<a href="https://www.zhihu.com/question/307700270/answer/581241134" target="_blank" rel="noopener">https://www.zhihu.com/question/307700270/answer/581241134</a></p>
<p>每一个行业都有自己的生命周期。先放一个mbalib的对行业生命周期定义：识别行业生命周期所处阶段的主要指标有：市场增长率、需求增长率、产品品种、竞争者数量、进入壁垒及退出壁垒、技术变革、用户购买行为等。下面分别介绍生命周期各阶段的特征。<br>1、 幼稚期：这一时期的市场增长率较高，需求增长较快，技术变动较大，行业中的用户主要致力于开辟新用户、占领市场，但此时技术上有很大的不确定性，在产品、市场、服务等策略上有很大的余地，对行业特点、行业竞争状况、用户特点等方面的信息掌握不多，企业进入壁垒较低。<br>2、  成长期：这一时期的市场增长率很高，需求高速增长，技术渐趋定型，行业特点、行业竞争状况及用户特点已比较明朗，企业进入壁垒提高，产品品种及竞争者数量增多。<br>3、 成熟期：这一时期的市场增长率不高，需求增长率不高，技术上已经成熟，行业特点、行业竞争状况及用户特点非常清楚和稳定，买方市场形成，行业盈利能力下降，新产品和产品的新用途开发更为困难，行业进入壁垒很高。<br>4、衰退期：这一时期的市场增长率下降，需求下降，产品品种及竞争者数目减少。从衰退的原因来看，可能有四种类型的衰退，它们分别是：<br>（1）资源型衰退，即由于生产所依赖的资源的枯竭所导致的衰退。<br>（2）效率型衰退，即由于效率低下的比较劣势而引起的行业衰退。<br>（3）收入低弹性衰退。即因需求–收入弹性较低而衰退的行业。<br>（4）聚集过度性衰退。即因经济过度聚集的弊端所引起的行业衰退。<a href="https://pic1.zhimg.com/50/v2-4bbdc2b7e310ef044490ebe78b814521_hd.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-rawwidth="1159" data-rawheight="671" data-size="normal" data-caption data-default-watermark-src="https://pic4.zhimg.com/50/v2-7059083864585ac897d9ccf18af64e28_hd.jpg" class="origin_image zh-lightbox-thumb lazyload" width="1159" data-original="https://pic1.zhimg.com/v2-4bbdc2b7e310ef044490ebe78b814521_r.jpg" data-src="https://pic1.zhimg.com/50/v2-4bbdc2b7e310ef044490ebe78b814521_hd.jpg"></a>我觉得单纯说IC是夕阳还是朝阳都不准确，用行业生命周期看IC最符合的是成熟期。我们来分析以下事实：  </p>
<ol>
<li>从晶体管发明到现在已经70多年了，估计和很多人的爷爷差不多大了，相比90年诞生的互联网行业，才不到30年，妥妥的年轻人。  </li>
<li>行业增长速度放缓。具体数据记不得了，半导体产业差不多复合年增长率10%左右。相比，拼多多2018年的增长是386%，抖音和短视频2018年增长是175%。谁在长身体的年纪这还看不出？<a href="https://pic1.zhimg.com/50/v2-c87a36075b9797f8f9624d391e187331_hd.jpg" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-rawwidth="500" data-rawheight="232" data-size="normal" data-default-watermark-src="https://pic2.zhimg.com/50/v2-55ccfb1049d8d9e93e16c35db49ada23_hd.jpg" class="origin_image zh-lightbox-thumb lazyload" width="500" data-original="https://pic1.zhimg.com/v2-c87a36075b9797f8f9624d391e187331_r.jpg" data-src="https://pic1.zhimg.com/50/v2-c87a36075b9797f8f9624d391e187331_hd.jpg"></a>  </li>
<li>行业巨头兼并加剧。上面这图是过去几十年博通的合并历史。这就是IC行业的大趋势，巨头不断兼并，新玩家非常少。上世纪90年代，CPU的玩家有十几家，包括很多大家耳熟能详的日本公司，而现在桌面CPU只有英特尔和AMD，手机CPU只有高通苹果华为三星。   </li>
<li>行业壁垒越来越高如今，芯片技术已经发展了几十年，复杂程度不可同日而语。芯片行业的投资非常大，英特尔建一个新厂花了400亿，研发周期极长。投资回报率低。投资风险大。在美国已经很少有风投会选择投资芯片行业了。   </li>
<li>但！需求持续增长IC和其他钢铁土木等传统行业很大的一个不同点在于市场对更快更好更低能耗的需求一直很强。因为无论互联网和计算机行业如何发展，根基依然上IC和半导体。AI爆发后，人类对算力的渴望从来没有如此强烈，因为大家发现原来我们很多事做不到只是因为我们算的还不够快而已！   </li>
<li>IC虽然成熟，但依然有很多潜在的爆发点摩尔定律虽然渐渐失效了，但这只是说明依靠器件小型化这条路不好走了而已，而其他方向如体系结构，依然有很多方向发展，如寒武纪的AI加速芯片，突破传统体系，走出了一条新道路。还有一个爆发点就是量子计算，虽然量子计算具体的时间表还无法确定，但一旦实现将是又一场革命，就如曾经晶体管革命掉电子管一样。而这些革命什么时候到来，我们并不知道。大多数人的人生，不过是在等待天才的诞生罢了。而天才诞生之前，一切都平淡无奇，乏善可陈。</li>
</ol>
]]></content>
      <categories>
        <category>感悟</category>
      </categories>
  </entry>
  <entry>
    <title>java-线程</title>
    <url>/2020/02/10/java-%E7%BA%BF%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="创建线程"><a href="#创建线程" class="headerlink" title="创建线程"></a>创建线程</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">自定义线程类</span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;  </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyThread</span><span class="params">(String name)</span></span>&#123;  </span><br><span class="line">	<span class="keyword">super</span>(name);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">重写run方法  </span><br><span class="line"><span class="meta">@Override</span>   </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;  </span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;  </span><br><span class="line">		System.out.println(getName()+<span class="string">":正在执行！"</span>+i);</span><br><span class="line">	&#125; <span class="comment">//重写run方法，完成该线程执行的逻辑  </span></span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">测试类</span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;    </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;  </span><br><span class="line">	MyTread mt =<span class="keyword">new</span> MyThread(“新线程”);  </span><br><span class="line">	mt.start();  </span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>;i++)&#123;  </span><br><span class="line">System.out.println(<span class="string">"main线程！"</span>+i);   </span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> calss MyRunnable implements Runnable&#123; </span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">		System.out.println(Thread.currentThread().getName()+<span class="string">""</span>+i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//implement 执行生效</span></span><br><span class="line">实现</span><br><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	System.out.println(<span class="string">"这是主线程"</span>);</span><br><span class="line">	Thread mt=<span class="keyword">new</span> Thread(<span class="string">"小强"</span>);</span><br><span class="line">	mt.start();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">		System.out.println(<span class="string">"旺财"</span>+i);</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h1 id="Thread和Runnable的区别"><a href="#Thread和Runnable的区别" class="headerlink" title="Thread和Runnable的区别"></a>Thread和Runnable的区别</h1><p><strong>Runnable接口的优势</strong><br>1，适合多个相同的程序代码的线程去共享同一个资源<br>2，可以避免java中的继承的局限性<br>3，增加程序的健壮性，实现解耦操作，代码可以被多个线程共享，代码和线程独立<br>4，线程池只能放入实现Runable或Callable类线程，不能直接放入继承Tread的类</p>
<h1 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h1>]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java线程</tag>
      </tags>
  </entry>
  <entry>
    <title>spring</title>
    <url>/2020/02/09/spring-mvc/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>M:model模型java<br>V:view视图<br>C:controller控制器  </p>
]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>集开发环境的使用</title>
    <url>/2020/02/09/eclips%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="eclipse"><a href="#eclipse" class="headerlink" title="eclipse"></a>eclipse</h1><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><p>alt + /:自动补全代码或者提示代码<br>Ctrl + /:自动注释当前行或者选择的多行<br>alt+shift+j:自动生成开头的做足额（在prefercense&gt;java&gt;code templates设置)<br>Ctrl+shift+/或者Ctrl+shift+\：块注释或者取消注释<br>Ctrl+shift+o:代码导包的快捷键<br>Ctrl+o:查看某个类中的方法<br>Ctrl+shift+F:格式化代码，快捷键能够将代码按照java驼峰命名规则显示<br>Ctrl+1:快速修复<br>Ctrl+z:全局撤销</p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>设置快捷代码<br>preference&gt;java&gt;Editor&gt;Templates  </p>
<h2 id="恢复窗口的位置"><a href="#恢复窗口的位置" class="headerlink" title="恢复窗口的位置"></a>恢复窗口的位置</h2><p>eclipse&gt;window–&gt;perspective–&gt;reset perspective  </p>
<h1 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h1><p>Ctrl+alt+o优化导入的类和包<br>alt+insert生成代码（如get，set方法，构造函数等）<br>fori/sout/psvm/+Tab<br>Ctrl+alt+t生成try catch或者alt+enter<br>Ctrl+o重写方法<br>alt+/代码提示<br>Ctrl+j自动补全代码<br>alt+enter万能<br>Ctrl+alt+v 生成新的对象先写右面<br>不换行先点insert再换行<br>Alt+向左箭头：返回上次光标位置<br>Alt+向右箭头：返回至后一次光标位置  </p>
]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java的集合</title>
    <url>/2020/02/08/java%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h1 id="list"><a href="#list" class="headerlink" title="list"></a>list</h1><p>list在util下面  </p>
<p>ArrayList在uill下面</p>
<p>LinkedList是一个双向链表结构。方便元素添加，删除的集合</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedListDemo</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		LinkedList&lt;String&gt; link=<span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">		link.addFirst(<span class="string">"abc1"</span>);</span><br><span class="line">		link.addFirst(<span class="string">"abc2"</span>);</span><br><span class="line">		link.addFirst(<span class="string">"abc3"</span>);</span><br><span class="line">		System.out.println(link);</span><br><span class="line">		<span class="comment">//打印元素</span></span><br><span class="line">		System.out.println(link.getFirst());</span><br><span class="line">		System.out.println(link.getLast());</span><br><span class="line">		System.out.println(link.removeFirst());</span><br><span class="line">		<span class="comment">//删除元素</span></span><br><span class="line">		System.out.println(link);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法</title>
    <url>/2020/02/07/markdown/</url>
    <content><![CDATA[<h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><p>markdown段落没有特殊的格式，直接编写文职就好段落的换行是使用两个以上空格加上回车</p>
<h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p>两个“<em>”<br>*斜体字</em><br>两个“-”<br>“-斜体字-”<br>两个“<em>”<br>“*</em>粗体<strong>”<br>两个“<em>_”<br>_粗体字</em><br>三个“*</strong>”<br><strong><em>粗斜体</em></strong><br>三个“<em>“粗斜体<br><strong>_粗斜体文本</strong></em></p>
<h1 id="代码区"><a href="#代码区" class="headerlink" title="代码区"></a>代码区</h1><p>代码区使用4个空格或者一个制表符（tab键）<br>也可以用```包裹一段代码，并指定一种语言   </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public void static main(String[] args)&#123;&#125;</span><br></pre></td></tr></table></figure></div>
<h1 id="makdown链接"><a href="#makdown链接" class="headerlink" title="makdown链接"></a>makdown链接</h1><p>链接使用方法如下<br>[链接名称](链接地址）<br>或者<br>&lt;链接地址&gt;</p>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>开头一个感叹号！<br>接着一个方括号，里面放上图片的替代文字<br>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的’title’属性的文字</p>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>在“#”后空格，所有语法注意空格键，否则失效</p>
]]></content>
      <categories>
        <category>blog使用</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/02/06/hello-world/</url>
    <content><![CDATA[<h1 id="Why-Blog"><a href="#Why-Blog" class="headerlink" title="Why Blog"></a>Why Blog</h1><h2 id="对博客的理解"><a href="#对博客的理解" class="headerlink" title="对博客的理解"></a>对博客的理解</h2><p>喜欢写Blog的人，会经历三个阶段。</p>
<blockquote>
<p>第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。</p>
</blockquote>
<blockquote>
<p>第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。</p>
</blockquote>
<blockquote>
<p>第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</p>
</blockquote>
<p>我们每个人的在网络上产生的数据越来越多，这些信息是我们在互联网上存在过的痕迹，值得我们认真对待。但是它们被分散分布在各个网站上。很多时候我们很难将它们聚合在一起，而且各个网站的信息排布方式也没有办法自由控制，所以我们需要一个可以由自己主宰的空间——博客。</p>
<p>通过博客，我们可以记录自己的生活和成长的轨迹。它不像 Twitter 那样碎片化，也不像 Facebook 那样关系化，它是私人的空间。</p>
]]></content>
  </entry>
</search>

<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>识别行业周期</title>
    <url>/2020/02/10/%E8%AF%86%E5%88%AB%E8%A1%8C%E4%B8%9A%E5%91%A8%E6%9C%9F/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>java-线程</title>
    <url>/2020/02/10/java-%E7%BA%BF%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="创建线程"><a href="#创建线程" class="headerlink" title="创建线程"></a>创建线程</h1><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">自定义线程类</span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;  </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">MyThread</span><span class="params">(String name)</span></span>&#123;  </span><br><span class="line">	<span class="keyword">super</span>(name);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">重写run方法  </span><br><span class="line"><span class="meta">@Override</span>   </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;  </span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;  </span><br><span class="line">		System.out.println(getName()+<span class="string">":正在执行！"</span>+i);</span><br><span class="line">	&#125; <span class="comment">//重写run方法，完成该线程执行的逻辑  </span></span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">测试类</span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span></span>&#123;    </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;  </span><br><span class="line">	MyTread mt =<span class="keyword">new</span> MyThread(“新线程”);  </span><br><span class="line">	mt.start();  </span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>;i++)&#123;  </span><br><span class="line">System.out.println(<span class="string">"main线程！"</span>+i);   </span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> calss MyRunnable implements Runnable&#123; </span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">		System.out.println(Thread.currentThread().getName()+<span class="string">""</span>+i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//implement 执行生效</span></span><br><span class="line">实现</span><br><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	System.out.println(<span class="string">"这是主线程"</span>);</span><br><span class="line">	Thread mt=<span class="keyword">new</span> Thread(<span class="string">"小强"</span>);</span><br><span class="line">	mt.start();</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">		System.out.println(<span class="string">"旺财"</span>+i);</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<h1 id="Thread和Runnable的区别"><a href="#Thread和Runnable的区别" class="headerlink" title="Thread和Runnable的区别"></a>Thread和Runnable的区别</h1><p><strong>Runnable接口的优势</strong><br>1，适合多个相同的程序代码的线程去共享同一个资源<br>2，可以避免java中的继承的局限性<br>3，增加程序的健壮性，实现解耦操作，代码可以被多个线程共享，代码和线程独立<br>4，线程池只能放入实现Runable或Callable类线程，不能直接放入继承Tread的类</p>
<h1 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h1>]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java线程</tag>
      </tags>
  </entry>
  <entry>
    <title>spring</title>
    <url>/2020/02/09/spring-mvc/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>M:model模型java<br>V:view视图<br>C:controller控制器  </p>
]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>集开发环境的使用</title>
    <url>/2020/02/09/eclips%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>#eclipse</p>
<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><p>alt + /:自动补全代码或者提示代码<br>Ctrl + /:自动注释当前行或者选择的多行<br>alt+shift+j:自动生成开头的做足额（在prefercense&gt;java&gt;code templates设置)<br>Ctrl+shift+/或者Ctrl+shift+\：块注释或者取消注释<br>Ctrl+shift+o:代码导包的快捷键<br>Ctrl+o:查看某个类中的方法<br>Ctrl+shift+F:格式化代码，快捷键能够将代码按照java驼峰命名规则显示<br>Ctrl+1:快速修复<br>Ctrl+z:全局撤销</p>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>设置快捷代码<br>preference&gt;java&gt;Editor&gt;Templates  </p>
<h2 id="恢复窗口的位置"><a href="#恢复窗口的位置" class="headerlink" title="恢复窗口的位置"></a>恢复窗口的位置</h2><p>eclipse&gt;window–&gt;perspective–&gt;reset perspective  </p>
<h1 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h1><p>Ctrl+alt+o优化导入的类和包<br>alt+insert生成代码（如get，set方法，构造函数等）<br>fori/sout/psvm/+Tab<br>Ctrl+alt+t生成try catch或者alt+enter<br>Ctrl+o重写方法<br>alt+/代码提示<br>Ctrl+j自动补全代码</p>
]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java的集合</title>
    <url>/2020/02/08/java%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h1 id="list"><a href="#list" class="headerlink" title="list"></a>list</h1><p>list在util下面  </p>
<p>ArrayList在uill下面</p>
<p>LinkedList是一个双向链表结构。方便元素添加，删除的集合</p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">java</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedListDemo</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		LinkedList&lt;String&gt; link=<span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">		link.addFirst(<span class="string">"abc1"</span>);</span><br><span class="line">		link.addFirst(<span class="string">"abc2"</span>);</span><br><span class="line">		link.addFirst(<span class="string">"abc3"</span>);</span><br><span class="line">		System.out.println(link);</span><br><span class="line">		<span class="comment">//打印元素</span></span><br><span class="line">		System.out.println(link.getFirst());</span><br><span class="line">		System.out.println(link.getLast());</span><br><span class="line">		System.out.println(link.removeFirst());</span><br><span class="line">		<span class="comment">//删除元素</span></span><br><span class="line">		System.out.println(link);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法</title>
    <url>/2020/02/07/markdown/</url>
    <content><![CDATA[<h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><p>markdown段落没有特殊的格式，直接编写文职就好段落的换行是使用两个以上空格加上回车</p>
<h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p>两个“<em>”<br>*斜体字</em><br>两个“-”<br>“-斜体字-”<br>两个“<em>”<br>“*</em>粗体<strong>”<br>两个“<em>_”<br>_粗体字</em><br>三个“*</strong>”<br><strong><em>粗斜体</em></strong><br>三个“<em>“粗斜体<br><strong>_粗斜体文本</strong></em></p>
<h1 id="代码区"><a href="#代码区" class="headerlink" title="代码区"></a>代码区</h1><p>代码区使用4个空格或者一个制表符（tab键）<br>也可以用```包裹一段代码，并指定一种语言   </p>
<div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public void static main(String[] args)&#123;&#125;</span><br></pre></td></tr></table></figure></div>
<h1 id="makdown链接"><a href="#makdown链接" class="headerlink" title="makdown链接"></a>makdown链接</h1><p>链接使用方法如下<br>[链接名称](链接地址）<br>或者<br>&lt;链接地址&gt;</p>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>开头一个感叹号！<br>接着一个方括号，里面放上图片的替代文字<br>接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的’title’属性的文字</p>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>在“#”后空格，所有语法注意空格键，否则失效</p>
]]></content>
      <categories>
        <category>blog使用</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/02/06/hello-world/</url>
    <content><![CDATA[<h1 id="Why-Blog"><a href="#Why-Blog" class="headerlink" title="Why Blog"></a>Why Blog</h1><h2 id="对博客的理解"><a href="#对博客的理解" class="headerlink" title="对博客的理解"></a>对博客的理解</h2><p>喜欢写Blog的人，会经历三个阶段。</p>
<blockquote>
<p>第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。</p>
</blockquote>
<blockquote>
<p>第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。</p>
</blockquote>
<blockquote>
<p>第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</p>
</blockquote>
<p>我们每个人的在网络上产生的数据越来越多，这些信息是我们在互联网上存在过的痕迹，值得我们认真对待。但是它们被分散分布在各个网站上。很多时候我们很难将它们聚合在一起，而且各个网站的信息排布方式也没有办法自由控制，所以我们需要一个可以由自己主宰的空间——博客。</p>
<p>通过博客，我们可以记录自己的生活和成长的轨迹。它不像 Twitter 那样碎片化，也不像 Facebook 那样关系化，它是私人的空间。</p>
]]></content>
  </entry>
</search>
